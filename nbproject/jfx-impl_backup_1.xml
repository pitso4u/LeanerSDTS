<?xml version="1.0" encoding="UTF-8"?>
<!--
*** GENERATED FROM TEMPLATE - DO NOT EDIT ***
***       EDIT ../build.xml INSTEAD       ***
-->
<project name="jfx-impl" default="jfx-deployment" basedir=".." xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1" xmlns:j2seproject3="http://www.netbeans.org/ns/j2se-project/3" xmlns:fx="javafx:com.sun.javafx.tools.ant">
  <description>JavaFX-specific Ant calls</description>
  <!-- Empty placeholders for easier customization in ../build.xml -->
  <target name="-pre-jfx-jar">
    <!-- Called right before <fx:jar> task. You can override this target in the ../build.xml file. -->
  </target>
  <target name="-post-jfx-jar">
    <!-- Called right after <fx:jar> task. You can override this target in the ../build.xml file. -->
  </target>
  <target name="-pre-jfx-deploy">
    <!-- Called right before <fx:deploy> task. You can override this target in the ../build.xml file. -->
  </target>
  <target name="-post-jfx-deploy">
    <!-- Called right after <fx:deploy> task. You can override this target in the ../build.xml file. -->
  </target>
  <target name="-pre-jfx-native">
    <!-- Called right before the call to native packager (just after -pre-jfx-deploy). You can override this target in the ../build.xml file. -->
  </target>
  <target name="-post-jfx-native">
    <!-- Called right after the call to native packager (just after -post-jfx-deploy). You can override this target in the ../build.xml file. -->
  </target>
  <!-- Check system and JDK version -->
  <macrodef name="target-on-another-jvm">
    <attribute name="target" default="${ant.project.invoked-targets}" />
    <attribute name="antfile" default="${ant.file}" />
    <attribute name="jvm" default="${platform.home}${file.separator}bin${file.separator}java" />
    <sequential>
      <condition property="maybe.add.bat" value=".bat" else="">
        <os family="windows" />
      </condition>
      <exec executable="${ant.home}${file.separator}bin${file.separator}ant${maybe.add.bat}">
        <env key="JAVACMD" value="@{jvm}" />
        <env key="ANT_HOME" value="" />
        <!-- for debugging: <arg value="-d"/> -->
        <arg line="-f "@{antfile}" />
        <arg line="-Dant.rerun=1" />
        <arg line="@{target}" />
      </exec>
    </sequential>
  </macrodef>
  <target name="-check-ant-vs-platform-jvm" depends="-do-init, -check-jdk-version">
    <echo message="platform.home = ${platform.home}" level="verbose" />
    <echo message="java.home = ${java.home}" level="verbose" />
    <echo message="ant.rerun = ${ant.rerun}" level="verbose" />
    <condition property="ant-java-version-different-from-plaform-java">
      <and>
        <isset property="platform.home" />
        <not>
          <equals arg1="${platform.home}" arg2="${java.home}" />
        </not>
        <not>
          <isset property="ant.rerun" />
        </not>
      </and>
    </condition>
  </target>
  <target name="-check-operating-system">
    <condition property="running.on.mac">
      <os family="mac" />
    </condition>
    <condition property="running.on.unix">
      <os family="unix" />
    </condition>
    <condition property="running.on.windows">
      <os family="windows" />
    </condition>
    <echo message="running.on.mac = ${running.on.mac}" level="verbose" />
    <echo message="running.on.unix = ${running.on.unix}" level="verbose" />
    <echo message="running.on.windows = ${running.on.windows}" level="verbose" />
  </target>
  <target name="-check-platform-home-fxsdk-java" depends="-check-property-javafx.sdk" if="javafx.sdk.defined">
    <condition property="do.set.platform.home.fxsdk.java">
      <and>
        <not>
          <isset property="active.platform.home.java.executable" />
        </not>
        <or>
          <available file="${javafx.sdk}${file.separator}bin${file.separator}java" />
          <available file="${javafx.sdk}${file.separator}bin${file.separator}java.exe" />
        </or>
      </and>
    </condition>
  </target>
  <target name="-set-platform-home-fxsdk-java" depends="-check-platform-home-fxsdk-java" if="do.set.platform.home.fxsdk.java">
    <property name="active.platform.home.java.executable" value="${javafx.sdk}${file.separator}bin${file.separator}java" />
  </target>
  <target name="-check-platform-home-java" if="platform.home">
    <condition property="do.set.platform.home.java">
      <and>
        <not>
          <isset property="active.platform.home.java.executable" />
        </not>
        <or>
          <available file="${platform.home}${file.separator}bin${file.separator}java" />
          <available file="${platform.home}${file.separator}bin${file.separator}java.exe" />
        </or>
      </and>
    </condition>
  </target>
  <target name="-set-platform-home-java" depends="-set-platform-home-fxsdk-java, -check-platform-home-java" if="do.set.platform.home.java">
    <property name="active.platform.home.java.executable" value="${platform.home}${file.separator}bin${file.separator}java" />
  </target>
  <target name="-check-platform-home-probjdk-java" unless="active.platform.home.java.executable">
    <condition property="do.set.platform.home.probjdk.java">
      <and>
        <not>
          <isset property="active.platform.home.java.executable" />
        </not>
        <or>
          <available file="${java.home}${file.separator}..${file.separator}bin${file.separator}java" />
          <available file="${java.home}${file.separator}..${file.separator}bin${file.separator}java.exe" />
        </or>
      </and>
    </condition>
  </target>
  <target name="-set-platform-home-probjdk-java" depends="-set-platform-home-java, -check-platform-home-probjdk-java" if="do.set.platform.home.probjdk.java">
    <property name="active.platform.home.java.executable" value="${java.home}${file.separator}..${file.separator}bin${file.separator}java" />
  </target>
  <target name="-check-platform-home-envjdk-java" unless="active.platform.home.java.executable">
    <property environment="env" />
    <condition property="do.set.platform.home.envjdk.java">
      <and>
        <not>
          <isset property="active.platform.home.java.executable" />
        </not>
        <or>
          <available file="${env.JAVA_HOME}${file.separator}bin${file.separator}java" />
          <available file="${env.JAVA_HOME}${file.separator}bin${file.separator}java.exe" />
        </or>
      </and>
    </condition>
  </target>
  <target name="-set-platform-home-envjdk-java" depends="-set-platform-home-probjdk-java, -check-platform-home-envjdk-java" if="do.set.platform.home.envjdk.java">
    <property environment="env" />
    <property name="active.platform.home.java.executable" value="${env.JAVA_HOME}${file.separator}bin${file.separator}java" />
  </target>
  <target name="-check-platform-home-fxrt-java" depends="-check-property-javafx.runtime" if="javafx.runtime.defined">
    <condition property="do.set.platform.home.fxrt.java">
      <and>
        <not>
          <isset property="active.platform.home.java.executable" />
        </not>
        <or>
          <available file="${javafx.runtime}${file.separator}bin${file.separator}java" />
          <available file="${javafx.runtime}${file.separator}bin${file.separator}java.exe" />
        </or>
      </and>
    </condition>
  </target>
  <target name="-set-platform-home-fxrt-java" depends="-set-platform-home-envjdk-java, -check-platform-home-fxrt-java" if="do.set.platform.home.fxrt.java">
    <property name="active.platform.home.java.executable" value="${javafx.runtime}${file.separator}bin${file.separator}java" />
    <echo message="Warning: java executable not found in JDK, evaluating java executable in RT instead." level="info" />
  </target>
  <target name="-check-platform-home-jre-java" unless="active.platform.home.java.executable">
    <condition property="do.set.platform.home.jre.java">
      <and>
        <not>
          <isset property="active.platform.home.java.executable" />
        </not>
        <or>
          <available file="${java.home}${file.separator}bin${file.separator}java" />
          <available file="${java.home}${file.separator}bin${file.separator}java.exe" />
        </or>
      </and>
    </condition>
  </target>
  <target name="-set-platform-home-jre-java" depends="-set-platform-home-fxrt-java, -check-platform-home-jre-java" if="do.set.platform.home.jre.java">
    <property name="active.platform.home.java.executable" value="${java.home}${file.separator}bin${file.separator}java" />
    <echo message="Warning: java executable not found in JDK, evaluating java executable in RT instead." level="info" />
  </target>
  <target name="-check-platform-home" depends="-set-platform-home-jre-java">
    <echo message="active.platform.home.java.executable = ${active.platform.home.java.executable}" level="verbose" />
    <fail message="Error:${line.separator}java executable not found !" unless="active.platform.home.java.executable" />
  </target>
  <target name="-check-jdk-version" depends="-do-init, -check-platform-home" unless="jdk-version-checked-in-jfximpl">
    <local name="version-output" />
    <exec executable="${active.platform.home.java.executable}" outputproperty="version-output">
      <arg value="-version" />
    </exec>
    <echo message="version-output:${line.separator}${version-output}" level="verbose" />
    <condition property="have-jdk-older-than-1.6">
      <or>
        <contains string="${version-output}" substring="java version "1.0" />
        <contains string="${version-output}" substring="java version "1.1" />
        <contains string="${version-output}" substring="java version "1.2" />
        <contains string="${version-output}" substring="java version "1.3" />
        <contains string="${version-output}" substring="java version "1.4" />
        <contains string="${version-output}" substring="java version "1.5" />
      </or>
    </condition>
    <fail message="Error:${line.separator}JavaFX 2.0+ projects require JDK version 1.6+ !" if="have-jdk-older-than-1.6" />
    <condition property="have-jdk-7u4or5-mac">
      <and>
        <or>
          <contains string="${version-output}" substring="java version "1.7.0_04" />
          <contains string="${version-output}" substring="java version "1.7.0_05" />
        </or>
        <os family="mac" />
      </and>
    </condition>
    <condition property="have-jdk-pre7u6">
      <or>
        <isset property="have-jdk-older-than-1.6" />
        <contains string="${version-output}" substring="java version "1.6" />
        <contains string="${version-output}" substring="java version "1.7.0"" />
        <contains string="${version-output}" substring="java version "1.7.0_01" />
        <contains string="${version-output}" substring="java version "1.7.0_02" />
        <contains string="${version-output}" substring="java version "1.7.0_03" />
        <contains string="${version-output}" substring="java version "1.7.0_04" />
        <contains string="${version-output}" substring="java version "1.7.0_05" />
      </or>
    </condition>
    <condition property="have-jdk-pre7u14">
      <or>
        <isset property="have-jdk-pre7u6" />
        <contains string="${version-output}" substring="java version "1.7.0_06" />
        <contains string="${version-output}" substring="java version "1.7.0_07" />
        <contains string="${version-output}" substring="java version "1.7.0_08" />
        <contains string="${version-output}" substring="java version "1.7.0_09" />
        <contains string="${version-output}" substring="java version "1.7.0_10" />
        <contains string="${version-output}" substring="java version "1.7.0_11" />
        <contains string="${version-output}" substring="java version "1.7.0_12" />
        <contains string="${version-output}" substring="java version "1.7.0_13" />
      </or>
    </condition>
    <property name="jdk-version-checked-in-jfximpl" value="true" />
    <echo message="have-jdk-7u4or5-mac = ${have-jdk-7u4or5-mac}" level="verbose" />
    <echo message="have-jdk-pre7u6 = ${have-jdk-pre7u6}" level="verbose" />
    <echo message="have-jdk-pre7u14 = ${have-jdk-pre7u14}" level="verbose" />
  </target>
  <target name="-check-ant-jre-version" unless="ant-jre-version-checked-in-jfximpl">
    <local name="version-output" />
    <exec executable="${java.home}${file.separator}bin${file.separator}java" outputproperty="version-output">
      <arg value="-version" />
    </exec>
    <echo message="version-output:${line.separator}${version-output}" level="verbose" />
    <condition property="have-ant-jre-pre7u6">
      <or>
        <contains string="${version-output}" substring="java version "1.0" />
        <contains string="${version-output}" substring="java version "1.1" />
        <contains string="${version-output}" substring="java version "1.2" />
        <contains string="${version-output}" substring="java version "1.3" />
        <contains string="${version-output}" substring="java version "1.4" />
        <contains string="${version-output}" substring="java version "1.5" />
        <contains string="${version-output}" substring="java version "1.6" />
        <contains string="${version-output}" substring="java version "1.7.0"" />
        <contains string="${version-output}" substring="java version "1.7.0_01" />
        <contains string="${version-output}" substring="java version "1.7.0_02" />
        <contains string="${version-output}" substring="java version "1.7.0_03" />
        <contains string="${version-output}" substring="java version "1.7.0_04" />
        <contains string="${version-output}" substring="java version "1.7.0_05" />
      </or>
    </condition>
    <condition property="have-jdk7-css2bin-bug">
      <!-- as of NB7.4 release date the external css-to-bss converter is unreliable in all JDK7 versions before 7u40 (with exception of 7u14)-->
      <and>
        <contains string="${version-output}" substring="java version "1.7" />
        <not>
          <matches string="${version-output}" pattern="\bjava version "1\.7\.0_(14|[4-9].)" />
        </not>
      </and>
    </condition>
    <property name="ant-jre-version-checked-in-jfximpl" value="true" />
    <echo message="have-ant-jre-pre7u6 = ${have-ant-jre-pre7u6}" level="verbose" />
    <echo message="have-jdk7-css2bin-bug = ${have-jdk7-css2bin-bug}" level="verbose" />
  </target>
  <target name="-check-jdk-7u4or5-mac" depends="-check-jdk-version" if="have-jdk-7u4or5-mac">
    <fail message="Error:${line.separator}JDK 7u4 Mac and 7u5 Mac do not support WebStart and JavaFX 2.0+ browser plugin technologies.${line.separator}Please upgrade to JDK 7u6 or later." />
  </target>
  <!-- Check availability of JavaFX SDK deployment support (ant-javafx.jar) -->
  <target name="-check-endorsed-javafx-ant-classpath">
    <condition property="endorsed-javafx-ant-classpath-available">
      <and>
        <isset property="endorsed.javafx.ant.classpath" />
        <not>
          <equals arg1="${endorsed.javafx.ant.classpath}" arg2="" />
        </not>
      </and>
    </condition>
    <echo message="endorsed-javafx-ant-classpath-available = ${endorsed-javafx-ant-classpath-available}" level="verbose" />
  </target>
  <target name="-check-property-javafx.sdk">
    <echo message="javafx.sdk = ${javafx.sdk}" level="verbose" />
    <condition property="javafx.sdk.defined">
      <and>
        <isset property="javafx.sdk" />
        <not>
          <contains string="${javafx.sdk}" substring="$${platform" casesensitive="false" />
        </not>
      </and>
    </condition>
    <condition property="javafx.sdk.missing+default">
      <and>
        <equals arg1="${platform.active}" arg2="Default_JavaFX_Platform" trim="true" />
        <not>
          <isset property="javafx.sdk.defined" />
        </not>
      </and>
    </condition>
    <condition property="javafx.sdk.missing-default">
      <and>
        <not>
          <equals arg1="${platform.active}" arg2="Default_JavaFX_Platform" trim="true" />
        </not>
        <not>
          <isset property="javafx.sdk.defined" />
        </not>
      </and>
    </condition>
    <echo message="javafx.sdk.defined = ${javafx.sdk.defined}" level="verbose" />
    <echo message="javafx.sdk.missing+default = ${javafx.sdk.missing+default}" level="verbose" />
    <echo message="javafx.sdk.missing-default = ${javafx.sdk.missing-default}" level="verbose" />
  </target>
  <target name="-check-ant-javafx-in-fxsdk-lib" depends="-check-property-javafx.sdk" if="javafx.sdk.defined">
    <condition property="do.set.ant-javafx.in.fxsdk.lib">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <available file="${javafx.sdk}${file.separator}lib${file.separator}ant-javafx.jar" />
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-fxsdk-lib" depends="-check-ant-javafx-in-fxsdk-lib" if="do.set.ant-javafx.in.fxsdk.lib">
    <property name="ant-javafx.jar.location" value="${javafx.sdk}${file.separator}lib${file.separator}ant-javafx.jar" />
  </target>
  <target name="-check-ant-javafx-in-fxsdk-tools" depends="-check-property-javafx.sdk" if="javafx.sdk.defined">
    <condition property="do.set.ant-javafx.in.fxsdk.tools">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <available file="${javafx.sdk}${file.separator}tools${file.separator}ant-javafx.jar" />
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-fxsdk-tools" depends="-set-ant-javafx-in-fxsdk-lib, -check-ant-javafx-in-fxsdk-tools" if="do.set.ant-javafx.in.fxsdk.tools">
    <property name="ant-javafx.jar.location" value="${javafx.sdk}${file.separator}tools${file.separator}ant-javafx.jar" />
  </target>
  <target name="-check-ant-javafx-in-platform-home-lib" if="platform.home">
    <condition property="do.set.ant-javafx.in.platform.home.lib">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <available file="${platform.home}${file.separator}lib${file.separator}ant-javafx.jar" />
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-platform-home-lib" depends="-set-ant-javafx-in-fxsdk-tools, -check-ant-javafx-in-platform-home-lib" if="do.set.ant-javafx.in.platform.home.lib">
    <property name="ant-javafx.jar.location" value="${platform.home}${file.separator}lib${file.separator}ant-javafx.jar" />
  </target>
  <target name="-check-ant-javafx-in-platform-home-tools" if="platform.home">
    <condition property="do.set.ant-javafx.in.platform.home.tools">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <available file="${platform.home}${file.separator}tools${file.separator}ant-javafx.jar" />
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-platform-home-tools" depends="-set-ant-javafx-in-platform-home-lib, -check-ant-javafx-in-platform-home-tools" if="do.set.ant-javafx.in.platform.home.tools">
    <property name="ant-javafx.jar.location" value="${platform.home}${file.separator}tools${file.separator}ant-javafx.jar" />
  </target>
  <target name="-check-ant-javafx-in-probjdk-lib" unless="ant-javafx.jar.location">
    <condition property="do.set.ant-javafx.in.probjdk.lib.has_jre">
      <available file="${java.home}${file.separator}..${file.separator}lib${file.separator}ant-javafx.jar" />
    </condition>
    <condition property="do.set.ant-javafx.in.probjdk.lib.no_jre">
      <available file="${java.home}${file.separator}lib${file.separator}ant-javafx.jar" />
    </condition>
    <condition property="do.set.ant-javafx.in.probjdk.lib">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <or>
          <isset property="do.set.ant-javafx.in.probjdk.lib.has_jre" />
          <isset property="do.set.ant-javafx.in.probjdk.lib.no_jre" />
        </or>
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-probjdk-lib" depends="-set-ant-javafx-in-platform-home-tools, -check-ant-javafx-in-probjdk-lib" if="do.set.ant-javafx.in.probjdk.lib">
    <condition property="ant-javafx.jar.location" value="${java.home}${file.separator}..${file.separator}lib${file.separator}ant-javafx.jar" else="${java.home}${file.separator}lib${file.separator}ant-javafx.jar">
      <isset property="do.set.ant-javafx.in.probjdk.lib.has_jre" />
    </condition>
  </target>
  <target name="-check-ant-javafx-in-probjdk-tools" unless="ant-javafx.jar.location">
    <condition property="do.set.ant-javafx.in.probjdk.tools.has_jre">
      <available file="${java.home}${file.separator}..${file.separator}tools${file.separator}ant-javafx.jar" />
    </condition>
    <condition property="do.set.ant-javafx.in.probjdk.tools.no_jre">
      <available file="${java.home}${file.separator}tools${file.separator}ant-javafx.jar" />
    </condition>
    <condition property="do.set.ant-javafx.in.probjdk.tools">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <or>
          <isset property="do.set.ant-javafx.in.probjdk.tools.has_jre" />
          <isset property="do.set.ant-javafx.in.probjdk.tools.no_jre" />
        </or>
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-probjdk-tools" depends="-set-ant-javafx-in-probjdk-lib, -check-ant-javafx-in-probjdk-tools" if="do.set.ant-javafx.in.probjdk.tools">
    <condition property="ant-javafx.jar.location" value="${java.home}${file.separator}..${file.separator}tools${file.separator}ant-javafx.jar" else="${java.home}${file.separator}tools${file.separator}ant-javafx.jar">
      <isset property="do.set.ant-javafx.in.probjdk.tools.has_jre" />
    </condition>
  </target>
  <target name="-check-ant-javafx-in-macjdk-lib" unless="ant-javafx.jar.location">
    <condition property="do.set.ant-javafx.in.macjdk.lib">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <available file="${java.home}${file.separator}lib${file.separator}ant-javafx.jar" />
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-macjdk-lib" depends="-set-ant-javafx-in-probjdk-tools, -check-ant-javafx-in-macjdk-lib" if="do.set.ant-javafx.in.macjdk.lib">
    <property name="ant-javafx.jar.location" value="${java.home}${file.separator}lib${file.separator}ant-javafx.jar" />
  </target>
  <target name="-check-ant-javafx-in-envjdk-lib" unless="ant-javafx.jar.location">
    <property environment="env" />
    <condition property="do.set.ant-javafx.in.envjdk.lib">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <available file="${env.JAVA_HOME}${file.separator}lib${file.separator}ant-javafx.jar" />
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-envjdk-lib" depends="-set-ant-javafx-in-macjdk-lib, -check-ant-javafx-in-envjdk-lib" if="do.set.ant-javafx.in.envjdk.lib">
    <property name="ant-javafx.jar.location" value="${env.JAVA_HOME}${file.separator}lib${file.separator}ant-javafx.jar" />
  </target>
  <target name="-check-ant-javafx-in-envjdk-tools" unless="ant-javafx.jar.location">
    <property environment="env" />
    <condition property="do.set.ant-javafx.in.envjdk.tools">
      <and>
        <not>
          <isset property="ant-javafx.jar.location" />
        </not>
        <available file="${env.JAVA_HOME}${file.separator}tools${file.separator}ant-javafx.jar" />
      </and>
    </condition>
  </target>
  <target name="-set-ant-javafx-in-envjdk-tools" depends="-set-ant-javafx-in-envjdk-lib, -check-ant-javafx-in-envjdk-tools" if="do.set.ant-javafx.in.envjdk.tools">
    <property name="ant-javafx.jar.location" value="${env.JAVA_HOME}${file.separator}tools${file.separator}ant-javafx.jar" />
  </target>
  <target name="-pre-check-ant-javafx-version" depends="-set-ant-javafx-in-envjdk-tools" unless="ant-javafx-version-already-checked-in-jfximpl">
    <condition property="do.check.ant-javafx.version">
      <and>
        <isset property="ant-javafx.jar.location" />
        <not>
          <isset property="ant-javafx-version-already-checked-in-jfximpl" />
        </not>
      </and>
    </condition>
  </target>
  <target name="-set-endorsed-javafx-ant-classpath" depends="-check-endorsed-javafx-ant-classpath, -pre-check-ant-javafx-version" if="endorsed-javafx-ant-classpath-available">
    <property name="javafx.ant.classpath" value="${endorsed.javafx.ant.classpath}:${ant-javafx.jar.location}" />
  </target>
  <target name="-set-javafx-ant-classpath" depends="-check-endorsed-javafx-ant-classpath, -pre-check-ant-javafx-version" unless="endorsed-javafx-ant-classpath-available">
    <property name="javafx.ant
